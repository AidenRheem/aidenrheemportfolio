/**
 * Zip two arrays together, returning an array of pairs.
 *
 * ```ts
 * zip([1, 2, 3], ["a", "b", "c"]) // [[1, "a"], [2, "b"], [3, "c"]]
 * ```
 *
 * @template A
 * @template B
 * @param {readonly A[]} a
 * @param {readonly B[]} b
 * @returns {[A, B][]}
 */
export function zip<A, B>(a: readonly A[], b: readonly B[]): [A, B][];
/**
 * Clamp a value between a minimum and maximum.
 *
 * ```ts
 * clamp(0,  5, 10) ===  5
 * clamp(0, -5, 10) ===  0
 * clamp(0, 15, 10) === 10
 * ```
 *
 * @param {number} min
 * @param {number} value
 * @param {number} max
 * @returns {number}
 */
export function clamp(min: number, value: number, max: number): number;
/** Ratio between CSS pixels and actual physical pixels */
export const pixelScale: import("svelte/store").Readable<number>;
